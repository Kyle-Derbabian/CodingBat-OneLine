public String[] allSwap(String[] strings) {
  return strings.length == 0 ? strings : Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new).length > 1 ? java.util.stream.Stream.concat(java.util.stream.Stream.concat(java.util.stream.Stream.concat(Arrays.stream(new String[] {Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]}), Arrays.stream(Arrays.copyOfRange(allSwap(java.util.stream.Stream.concat(Arrays.asList(Arrays.copyOfRange(strings, 1, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]))).stream(), Arrays.asList(Arrays.copyOfRange(strings, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]) + 1, strings.length)).stream()).collect(Collectors.toList()).stream().toArray(String[]::new)), 0, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]) - 1))).collect(Collectors.toList()).stream(), Arrays.stream(new String[] {strings[0]})).collect(Collectors.toList()).stream(), Arrays.stream(Arrays.copyOfRange(allSwap(java.util.stream.Stream.concat(Arrays.asList(Arrays.copyOfRange(strings, 1, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]))).stream(), Arrays.asList(Arrays.copyOfRange(strings, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]) + 1, strings.length)).stream()).collect(Collectors.toList()).stream().toArray(String[]::new)), Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]) - 1, allSwap(java.util.stream.Stream.concat(Arrays.asList(Arrays.copyOfRange(strings, 1, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]))).stream(), Arrays.asList(Arrays.copyOfRange(strings, Arrays.asList(strings).indexOf(Arrays.stream(strings).filter(i -> i.substring(0, 1).equals(strings[0].substring(0, 1))).toArray(String[]::new)[1]) + 1, strings.length)).stream()).collect(Collectors.toList()).stream().toArray(String[]::new)).length))).collect(Collectors.toList()).stream().toArray(String[]::new) : java.util.stream.Stream.concat(Arrays.stream(new String[] {strings[0]}), Arrays.stream(allSwap(Arrays.copyOfRange(strings, 1, strings.length)))).toArray(String[]::new);
}
