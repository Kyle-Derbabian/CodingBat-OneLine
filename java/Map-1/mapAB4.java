public Map<String, String> mapAB4(Map<String, String> map) {
  return map.containsKey("a") && map.containsKey("b") && map.get("a").length() == map.get("b").length() ? map.entrySet().stream().collect(Collectors.toMap(n -> n.getKey(), n -> n.getKey().equals("a") || n.getKey().equals("b") ? "" : n.getValue())) : map.containsKey("a") && map.containsKey("b") ? map.containsKey("c") ? map.entrySet().stream().collect(Collectors.toMap(n -> n.getKey(),  n -> n.getKey().equals("c") && map.get("a").length() > map.get("b").length() ? map.get("a") : n.getKey().equals("c") ? map.get("b") : n.getValue())) : java.util.stream.Stream.concat(java.util.stream.Stream.of(new String[][]{{"c", map.get("a").length() > map.get("b").length() ? map.get("a") : map.get("b")}}).collect(Collectors.toMap(n -> n[0], n -> n[1])).entrySet().stream(), map.entrySet().stream()).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue)) : map;
}
