public int countClumps(int[] nums) {
  return nums.length < 2 ? 0 : new Scanner(Arrays.stream(nums).boxed().collect(Collectors.toList()).toString().replace(",", "").replace("[", "").replace("]", "").replace(" ", "_").trim() + "_").useDelimiter("[" + (Arrays.stream(nums).boxed().collect(Collectors.toList()).toString().replace(",", "").replace("[", "").replace("]", "").replace(" ", "_").trim() + "_").substring(0, 1) + "_]*").hasNext() ? (nums[0] == nums[1] ? 1 : 0) + countClumps(Arrays.copyOfRange(nums, Arrays.stream(nums).boxed().collect(Collectors.toList()).indexOf(Integer.parseInt(new Scanner(Arrays.stream(nums).boxed().collect(Collectors.toList()).toString().replace(",", "").replace("[", "").replace("]", "").replace(" ", "_").trim() + "_").useDelimiter("[" + (Arrays.stream(nums).boxed().collect(Collectors.toList()).toString().replace(",", "").replace("[", "").replace("]", "").replace(" ", "_").trim() + "_").substring(0, 1) + "_]*").next())), nums.length)) : 1;
}
